- name: Home Assistant
  hosts: homeassistant
  tasks:
    - name: Install git and docker-py
      become: true
      ansible.builtin.apt:
        update_cache: true
        name: 
          - git
          - python3-docker
    - name: Create docker volumes
      community.docker.docker_volume:
        name: mariadb-data
    - name: MariaDB container
      community.docker.docker_container:
        name: hass-mariadb
        image: mariadb:lts
        restart_policy: unless-stopped
        pull: true
        published_ports:
          - 3306:3306
        volumes:
          - mariadb-data:/var/lib/mysql
        env:
          MARIADB_ROOT_PASSWORD: "{{ lookup('env', 'HASS_MARIADB_ROOT_PASSWORD') }}"
          MARIADB_USER: homeassistant
          MARIADB_PASSWORD: "{{ lookup('env', 'HASS_MARIADB_PASSWORD') }}"
          MARIADB_DATABASE: homeassistant
    - name: Checkout Home Assistant config repository
      ansible.builtin.git:
        repo: https://github.com/mfugate1/home-assistant-config.git
        dest: /docker/home-assistant
        force: true
    - name: Create secrets file
      ansible.builtin.template:
        src: files/homeassistant/secrets.yaml
        dest: /docker/home-assistant/secrets.yaml
        owner: jenkins
        mode: '0600'
    - name: Home Assistant Container
      community.docker.docker_container:
        name: home-assistant
        image: ghcr.io/home-assistant/home-assistant:stable
        restart_policy: unless-stopped
        network_mode: host
        privileged: true
        pull: true
        timeout: 300
        dns_servers:
          - 192.168.1.1
        volumes:
          - /docker/home-assistant:/config
          - /var/run/docker.sock:/var/run/docker.sock
          - /etc/localtime:/etc/localtime:ro
    - name: Test Home Assistant configuration
      community.docker.docker_container_exec:
        container: home-assistant
        argv:
          - hass
          - --script
          - check_config
          - -c
          - /config
          - -f
      register: test_result
      failed_when: "'ERROR' in test_result.stdout"