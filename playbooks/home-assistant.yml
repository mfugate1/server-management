- name: Home Assistant
  hosts: homeassistant
  tasks:
    - name: Create homeassistant database
      community.mysql.mysql_db:
        name: homeassistant
        state: present
        login_user: root
        login_password: "{{ lookup('env', 'MARIADB_ROOT_PASSWORD') }}"
    - name: Create homeassistant user
      community.mysql.mysql_user:
        name: homeassistant
        password: "{{ lookup('env', 'HASS_MARIADB_PASSWORD') }}"
        host: "172.%"
        priv: "homeassistant.*:ALL"
        login_user: root
        login_password: "{{ lookup('env', 'MARIADB_ROOT_PASSWORD') }}"
    - name: Checkout Home Assistant config repository
      register: config_repo
      ansible.builtin.git:
        repo: https://github.com/mfugate1/home-assistant-config.git
        dest: /docker/home-assistant
        force: true
    - name: Create secrets file
      ansible.builtin.template:
        src: files/homeassistant/secrets.yaml
        dest: /docker/home-assistant/secrets.yaml
        owner: jenkins
        mode: '0600'
    - name: Home Assistant Container
      register: hass_container
      community.docker.docker_container:
        name: home-assistant
        image: ghcr.io/home-assistant/home-assistant:stable
        restart_policy: unless-stopped
        network_mode: host
        privileged: true
        pull: true
        timeout: 300
        dns_servers:
          - 192.168.1.1
        volumes:
          - /docker/home-assistant:/config
          - /var/run/docker.sock:/var/run/docker.sock
          - /etc/localtime:/etc/localtime:ro
    - name: Test Home Assistant configuration
      community.docker.docker_container_exec:
        container: home-assistant
        argv:
          - hass
          - --script
          - check_config
          - -c
          - /config
          - -f
      register: test_result
      failed_when: "'ERROR' in test_result.stdout"
    - name: Soft Home Assistant Reload if container didn't change
      when: config_repo.changed and not hass_container.changed 
      ansible.builtin.uri:
        url: "{{ lookup('env', 'HASS_URL') }}/api/services/homeassistant/reload_all"
        method: POST
        headers:
          Authorization: "Bearer {{ lookup('env', 'HASS_TOKEN') }}"
