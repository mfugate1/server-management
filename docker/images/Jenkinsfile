properties (
    [
        disableConcurrentBuilds(),
        pipelineTriggers([
            [$class: 'GenericTrigger',
                token: 'Jenkins-Worker-Docker-Build',
                causeString: 'Github Webhook'
            ]
        ]),
        parameters([
            booleanParam(
                name: 'forceBuilds',
                defaultValue: false,
                description: 'Enable this parameter to force all docker images to be built and pushed'
            )
        ])
    ]
)

node ('docker') {
    Map scmVars = checkout scm
    echo(scmVars, true)
    
    List imagesToBuild = []
    if (!scmVars.containsKey('GIT_PREVIOUS_COMMIT') || !hasSuccessfulBuild() || params.forceBuilds) {
        echo "No previous commit or no previously successful build or force build parameter was true; going to build all docker images"
        imagesToBuild = findFiles(glob: 'docker/images/**/Dockerfile').collect{it.path}
    } else {
        getModifiedFiles().each {
            if (it.endsWith('/Dockerfile')) {
                imagesToBuild += it
            }
        }
    }

    if (!imagesToBuild) {
        echo "No images to build"
        return
    }

    String user
    withCredentials([usernamePassword(credentialsId: 'docker-credentials', usernameVariable: 'USER', passwordVariable: 'PASS')]) {
        sh 'echo $PASS | docker login -u $USER --password-stdin'
        user = USER
    }

    echo(imagesToBuild, true, "Building images:")
    imagesToBuild.each {
        String imageName = "${user}/${it.tokenize('/')[-2]}:latest"
        dir (it - '/Dockerfile') {
            sh "docker build --no-cache --pull -t ${imageName} ."
            sh "docker push ${imageName}"
        }
    }
}